suite: Common

templates:
  # TODO: test all templates
  # - '*.yaml'
  - deployment.yaml
  - ingress.yaml
  - service.yaml
  - extraobjects.yaml

values:
  - ../values-test.yaml

set:
  deployment.image.repository: example-image
  deployment.image.tag: example-tag

capabilities:
  apiVersions:
    - autoscaling.k8s.io/v1/VerticalPodAutoscaler
    - autoscaling/v2/HorizontalPodAutoscaler
    - batch/v1/CronJob
    - bitnami.com/v1alpha1
    - cert-manager.io/v1
    - endpointmonitor.stakater.com/v1alpha1
    - external-secrets.io/v1/ExternalSecret
    - forecastle.stakater.com/v1alpha1
    - grafana.integreatly.org/v1beta1
    - monitoring.coreos.com/v1
    - monitoring.coreos.com/v1alpha1
    - policy/v1/PodDisruptionBudget
    - route.openshift.io/v1
    - secrets-store.csi.x-k8s.io/v1alpha1

x-keys:
  documentSelector: &x-documentSelector
    # TODO: selecting documents non-strictly doesn't work https://github.com/helm-unittest/helm-unittest/issues/320
    # isNotEmpty: metadata.name
    matchMany: true
    skipEmptyTemplates: true

tests:
  - it: Default common labels
    documentSelector:
      <<: *x-documentSelector
    asserts:
      - matchRegex:
          path: metadata.name
          pattern: ^(application|RELEASE-NAME).*$
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: application
      - matchRegex:
          path: metadata.labels["helm.sh/chart"]
          pattern: ^application-\d+\.\d+\.\d+.*$
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
      - equal:
          path: metadata.labels["app.kubernetes.io/version"]
          value: example-tag
      - notExists:
          path: metadata.labels["app.kubernetes.io/component"]
      - equal:
          path: metadata.labels["app.kubernetes.io/part-of"]
          value: application

  - it: Common labels
    documentSelector:
      <<: *x-documentSelector
    set:
      componentOverride: example-component
      partOfOverride: example-part-of
      applicationName: example-app-name
      additionalLabels:
        example.com/organization: example-organization
        example.com/team: example-team
        example.com/owner: example-owner
    asserts:
      - matchRegex:
          path: metadata.name
          pattern: ^(example-app-name|RELEASE-NAME).*$
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: example-app-name
      - equal:
          path: metadata.labels["app.kubernetes.io/component"]
          value: example-component
      - equal:
          path: metadata.labels["app.kubernetes.io/part-of"]
          value: example-part-of
      - equal:
          path: metadata.labels["example.com/organization"]
          value: example-organization
      - equal:
          path: metadata.labels["example.com/team"]
          value: example-team
      - equal:
          path: metadata.labels["example.com/owner"]
          value: example-owner
      - equal:
          path: metadata.labels["group"]
          value: com.stakater.platform
      - equal:
          path: metadata.labels["team"]
          value: stakater
