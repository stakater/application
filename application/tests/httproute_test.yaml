suite: APIGateway-HTTPRoute

templates:
  - httproute.yaml

tests:
  - it: does not render when httpRoute is not enabled
    set:
      httpRoute:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: does not render when Gateway API is not available
    set:
      httpRoute:
        enabled: true
    asserts:
      - failedTemplate:
          errorMessage: "There is no APIGateway resource definition in the target cluster!"

  - it: renders a basic HTTPRoute with minimal configuration
    set:
      applicationName: "my-app"
      httpRoute:
        enabled: true
        hostnames:
          - example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: HTTPRoute
      - equal:
          path: metadata.name
          value: my-app
      - equal:
          path: spec.hostnames[0]
          value: example.com
      - equal:
          path: spec.rules[0].matches[0].path.value
          value: /
      - equal:
          path: spec.rules[0].backendRefs[0].name
          value: example-service

  - it: renders HTTPRoute with additional labels
    set:
      httpRoute:
        enabled: true
        additionalLabels:
          custom: label
        hostnames:
          - example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - equal:
          path: metadata.labels.custom
          value: label

  - it: renders HTTPRoute with annotations
    set:
      httpRoute:
        enabled: true
        annotations:
          custom: annotation
        hostnames:
          - example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - equal:
          path: metadata.annotations.custom
          value: annotation

  - it: renders HTTPRoute with custom gatewayName and gatewayNamespace
    set:
      httpRoute:
        enabled: true
        gatewayName: custom-gateway
        gatewayNamespace: custom-ns
        hostnames:
          - example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - equal:
          path: spec.parentRefs[0].name
          value: custom-gateway
      - equal:
          path: spec.parentRefs[0].namespace
          value: custom-ns

  - it: renders HTTPRoute with multiple hostnames
    set:
      httpRoute:
        enabled: true
        hostnames:
          - example.com
          - another-example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - equal:
          path: spec.hostnames[0]
          value: example.com
      - equal:
          path: spec.hostnames[1]
          value: another-example.com

  - it: renders HTTPRoute with multiple rules
    set:
      httpRoute:
        enabled: true
        hostnames:
          - example.com
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: example-service
                port: 80
          - matches:
              - path:
                  type: PathPrefix
                  value: /api
            backendRefs:
              - name: api-service
                port: 8080
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - equal:
          path: spec.rules[0].matches[0].path.value
          value: /
      - equal:
          path: spec.rules[1].matches[0].path.value
          value: /api
      - equal:
          path: spec.rules[1].backendRefs[0].name
          value: api-service
  - it: renders HTTPRoute with a request redirect filter
    set:
      applicationName: "tls-redirect"
      httpRoute:
        enabled: true
        gatewayName: example-gateway
        hostnames:
          - foo.example.com
          - bar.example.com
        rules:
          - filters:
              - type: RequestRedirect
                requestRedirect:
                  scheme: https
                  port: 443
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: HTTPRoute
      - equal:
          path: metadata.name
          value: tls-redirect
      - equal:
          path: spec.parentRefs[0].name
          value: example-gateway
      - equal:
          path: spec.hostnames[0]
          value: foo.example.com
      - equal:
          path: spec.hostnames[1]
          value: bar.example.com
      - equal:
          path: spec.rules[0].filters[0].type
          value: RequestRedirect
      - equal:
          path: spec.rules[0].filters[0].requestRedirect.scheme
          value: https
      - equal:
          path: spec.rules[0].filters[0].requestRedirect.port
          value: 443
