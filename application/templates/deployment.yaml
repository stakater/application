{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  {{- include "application.labels" . | nindent 4 }}
{{- if .Values.deployment.additionalLabels }}
{{ toYaml .Values.deployment.additionalLabels | indent 4 }}
{{- end }}
{{- if or .Values.deployment.annotations .Values.deployment.reloadOnChange }}
  annotations:
{{- end }}
{{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
{{- if .Values.deployment.reloadOnChange }} 
    reloader.stakater.com/auto: "true"
{{- end }}
  name: {{ template "application.name" . }}
  namespace: {{ include "application.namespace" . }}
spec:
{{- if .Values.deployment.replicas }}
  replicas: {{ .Values.deployment.replicas }}
{{- end }}
  selector:
    matchLabels:
{{ include "application.selectorLabels" . | indent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy:
{{ toYaml .Values.deployment.strategy | indent 4 }}
  {{- end }}
  {{- if not (kindIs "invalid" .Values.deployment.revisionHistoryLimit) }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- end }}
  template:
    metadata:
      labels:
{{ include "application.selectorLabels" . | indent 8 }}
{{- if .Values.deployment.podLabels }}
{{ toYaml .Values.deployment.podLabels | indent 8 }}
{{- end }}
{{- if or .Values.deployment.additionalPodAnnotations .Values.deployment.fluentdConfigAnnotations }}
      annotations:
{{- end }}
{{- with .Values.deployment.additionalPodAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.deployment.fluentdConfigAnnotations }}
        fluentdConfiguration: >
          [
            {
              "containers":
              [
                {
                  "expressionFirstLine": "{{ .Values.deployment.fluentdConfigAnnotations.regexFirstLine }}",
                  "expression": "{{ .Values.deployment.fluentdConfigAnnotations.regex }}",
                  "timeFormat": "{{ .Values.deployment.fluentdConfigAnnotations.timeFormat }}",
                  "containerName": "{{ template "application.name" . }}"
                }
              ]{{- with .Values.deployment.fluentdConfigAnnotations.notifications }},
              "notifications": {
                {{- with .slack }}
                "slack": {
                  "webhookURL": "{{ .webhookURL }}",
                  "channelName": "{{ .channelName }}"
                },
                {{- end }}
                "key": "{{ .key }}",
                "pattern": "{{ .pattern }}"
              }
              {{- end }}
            }
          ]
{{- end }}
    spec:
      {{- if .Values.deployment.hostAliases }}
      hostAliases:      
{{ toYaml .Values.deployment.hostAliases | indent 6 }}
      {{- end }}
      {{- if .Values.deployment.initContainers }}
      initContainers:
  {{- range $key, $value := .Values.deployment.initContainers  }}
      - name: {{ $key }}
{{ include "application.tplvalues.render" ( dict "value" $value "context" $ ) | indent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.deployment.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.deployment.tolerations }}
      tolerations:
{{ toYaml .Values.deployment.tolerations | indent 8 -}}
      {{- end }}
      {{- if .Values.deployment.affinity }}
      affinity:
{{ toYaml .Values.deployment.affinity | indent 8 -}}
      {{- end }}
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.imagePullSecrets }}      
      imagePullSecrets:
      - name: {{ .Values.deployment.imagePullSecrets }}
      {{- end }}
      containers:
        {{- if .Values.deployment.openshiftOAuthProxy.enabled }}
      - args:
        {{- if .Values.deployment.openshiftOAuthProxy.disableTLSArg }}
        - --http-address=:8081
        {{- else }}
        - --https-address=:8443
        {{- end }}
        - --provider=openshift
        - --upstream=http://localhost:{{ .Values.deployment.openshiftOAuthProxy.port }}
        - --openshift-service-account={{ template "application.name" . }}
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --cookie-secret=SECRET
        image: {{ .Values.deployment.openshiftOAuthProxy.image  | default "openshift/oauth-proxy:latest" }}
        imagePullPolicy: IfNotPresent
        name: oauth-proxy
        ports:
        {{- if .Values.deployment.openshiftOAuthProxy.disableTLSArg }}
        - containerPort: 8081
        {{- else }}
        - containerPort: 8443
        {{- end }}
          name: proxy
        volumeMounts:
        - mountPath: /etc/tls/private
          name: proxy-tls 
        {{- end }}
      - name: {{ template "application.name" . }}

        {{- $image := required "Undefined image for application container" .Values.deployment.image.repository }}
        {{- with .Values.deployment.image.tag    }} {{- $image = print $image ":" . }} {{- end }}
        {{- with .Values.deployment.image.digest }} {{- $image = print $image "@" . }} {{- end }}
        image: {{ $image }}

        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        {{- if .Values.deployment.command }}
        command: {{- include "application.tplvalues.render" (dict "value" .Values.deployment.command "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.args }}
        args: {{- include "application.tplvalues.render" (dict "value" .Values.deployment.args "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.ports }}
        ports:
{{ toYaml .Values.deployment.ports | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.envFrom }}
        envFrom:
        {{- range $value := .Values.deployment.envFrom }}
        {{- if (eq .type "configmap") }}
        - configMapRef:
            {{- if .name }}
            name: {{ include "application.tplvalues.render" ( dict "value" $value.name "context" $ ) }}
            {{- else if .nameSuffix }}
            name: {{ template "application.name" $ }}-{{ include "application.tplvalues.render" ( dict "value" $value.nameSuffix "context" $ ) }}
            {{- else }}
            name: {{ template "application.name" $ }}
            {{- end }}
        {{- end }}
        {{- if (eq .type "secret") }}
        - secretRef:
            {{- if .name }}
            name: {{ include "application.tplvalues.render" ( dict "value" $value.name "context" $ ) }}
            {{- else if .nameSuffix }}
            name: {{ template "application.name" $ }}-{{ include "application.tplvalues.render" ( dict "value" $value.nameSuffix "context" $ ) }}
            {{- else }}
            name: {{ template "application.name" $ }}
            {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.deployment.env }}
        env:
        {{- range $key, $value := .Values.deployment.env }}
        - name: {{ include "application.tplvalues.render" ( dict "value" $key "context" $ ) }}
{{ include "application.tplvalues.render" ( dict "value" $value "context" $ ) | indent 10 }}
        {{- end }}
        {{- end }}
        {{- if .Values.deployment.startupProbe.enabled }}
        startupProbe:
          failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds }}
          successThreshold: {{ .Values.deployment.startupProbe.successThreshold }}
          timeoutSeconds: {{ .Values.deployment.startupProbe.timeoutSeconds }}
          initialDelaySeconds: {{ .Values.deployment.startupProbe.initialDelaySeconds }}
          {{- if .Values.deployment.startupProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.startupProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.startupProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.startupProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.startupProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.startupProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.deployment.livenessProbe.enabled }} 
        livenessProbe:
          failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
          {{- if .Values.deployment.livenessProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.livenessProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.livenessProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.livenessProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.livenessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.livenessProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.deployment.readinessProbe.enabled }} 
        readinessProbe:
          failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
          {{- if .Values.deployment.readinessProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.readinessProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.readinessProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.readinessProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.readinessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.readinessProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- if or (.Values.deployment.volumeMounts) (and (eq .Values.persistence.enabled true) (eq .Values.persistence.mountPVC true) )}} 
        volumeMounts:
        {{- if (eq .Values.persistence.mountPVC true) }}
        - mountPath: {{ .Values.persistence.mountPath }}
          name: {{ template "application.name" . }}-data
        {{- end }}
        {{- if .Values.deployment.volumeMounts }}
        {{- range $key, $value := .Values.deployment.volumeMounts }}
        - name: {{ $key }}
{{  include "application.tplvalues.render" ( dict "value" $value "context" $ ) | indent 10 }} 	
        {{- end }}
        {{- end }}
      {{- end }}
        {{- with .Values.deployment.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.deployment.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.deployment.containerSecurityContext | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.additionalContainers }}
{{ toYaml .Values.deployment.additionalContainers | indent 6 }}
        {{- end }}
        {{- if .Values.deployment.securityContext }}
      securityContext:      
{{ toYaml .Values.deployment.securityContext | indent 8 }}
          {{- end }}
      {{- if .Values.deployment.dnsConfig }}
      dnsConfig:      
{{ toYaml .Values.deployment.dnsConfig | indent 8 }}
          {{- end }}
      {{- if or (.Values.deployment.openshiftOAuthProxy.enabled) (.Values.deployment.volumes) (and (eq .Values.persistence.enabled true) (eq .Values.persistence.mountPVC true) )}} 
      volumes:
        {{- if .Values.deployment.openshiftOAuthProxy.enabled }}
      - name: proxy-tls
        secret:
          secretName: {{ .Values.deployment.openshiftOAuthProxy.secretName }}
        {{- end }}
        {{- if (eq .Values.persistence.mountPVC true) }}
      - name: {{ template "application.name" . }}-data
        persistentVolumeClaim:
          {{- if .Values.persistence.name }}
          claimName: {{ .Values.persistence.name }}
          {{- else }}
          claimName: {{ template "application.name" . }}-data
          {{- end }}
        {{- end }}
        {{- if .Values.deployment.volumes }}
        {{- range $key, $value := .Values.deployment.volumes  }}
      - name: {{ $key  }}
{{ include "application.tplvalues.render" ( dict "value" $value "context" $ ) | indent 8 }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.rbac.serviceAccount.enabled }}
      {{- if .Values.rbac.serviceAccount.name }}
      serviceAccountName: {{ .Values.rbac.serviceAccount.name }}
      {{- else }}
      serviceAccountName: {{ template "application.name" $ }}
      {{- end }}
      {{- end }}
{{- end }}
