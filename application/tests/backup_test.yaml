suite: Backup

templates:
  - backup.yaml

tests:
  - it: does not yield Backup resource if backup.enabled is false
    set:
      backup:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: yields Backup resource if backup.enabled is true
    set:
      backup:
        enabled: true
        namespace: my-namespace
        storageLocation: my-storage-location
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Backup

  - it: includes correct metadata name
    set:
      backup:
        enabled: true
        namespace: my-namespace
        storageLocation: my-storage-location
      applicationName: my-app
    asserts:
      - equal:
          path: metadata.name
          value: my-app-backup

  - it: includes correct namespace
    set:
      backup:
        enabled: true
        namespace: my-namespace
        storageLocation: my-storage-location
    asserts:
      - equal:
          path: metadata.namespace
          value: my-namespace

  - it: uses default values for optional fields
    set:
      backup:
        enabled: true
        namespace: my-namespace
        storageLocation: my-storage-location
    asserts:
      - isNullOrEmpty:
          path: spec.defaultVolumesToRestic
      - equal:
          path: spec.defaultVolumesToFsBackup
          value: true
      - equal:
          path: spec.snapshotVolumes
          value: true
      - equal:
          path: spec.ttl
          value: "1h0m0s"

  - it: includes correct includedNamespaces by default
    set:
      namespaceOverride: base-namespace
      backup:
        enabled: true
        storageLocation: my-storage-location
    asserts:
      - equal:
          path: spec.includedNamespaces
          value: [base-namespace]

  - it: includes correct includedNamespaces when defined
    set:
      namespaceOverride: base-namespace
      backup:
        enabled: true
        includedNamespaces:
          - my-namespace
        storageLocation: my-storage-location
    asserts:
      - equal:
          path: spec.includedNamespaces
          value: [my-namespace]

  - it: includes includedResources when defined
    set:
      backup:
        enabled: true
        includedResources:
          - deployments
          - services
    asserts:
      - equal:
          path: spec.includedResources
          value:
            - deployments
            - services

  - it: includes excludedResources when defined
    set:
      backup:
        enabled: true
        excludedResources:
          - secrets
          - configmaps
    asserts:
      - equal:
          path: spec.excludedResources
          value:
            - secrets
            - configmaps

  - it: includes snapshotMoveData when defined
    set:
      backup:
        enabled: true
        snapshotMoveData: true
    asserts:
      - equal:
          path: spec.snapshotMoveData
          value: true

  - it: does not include snapshotMoveData when not defined
    set:
      backup:
        enabled: true
    asserts:
      - notExists:
          path: spec.snapshotMoveData

  - it: uses application selector labels
    set:
      backup:
        enabled: true
      applicationName: my-app
    asserts:
      - equal:
          path: spec.labelSelector.matchLabels
          value:
            app.kubernetes.io/name: my-app

  - it: includes csiSnapshotTimeout when defined
    set:
      backup:
        enabled: true
        csiSnapshotTimeout: "10m"
    asserts:
      - equal:
          path: spec.csiSnapshotTimeout
          value: "10m"

  - it: includes datamover when defined
    set:
      backup:
        enabled: true
        datamover: "kopia"
    asserts:
      - equal:
          path: spec.datamover
          value: "kopia"

  - it: includes itemOperationTimeout when defined
    set:
      backup:
        enabled: true
        itemOperationTimeout: "1h"
    asserts:
      - equal:
          path: spec.itemOperationTimeout
          value: "1h"

  - it: includes volumeSnapshotLocations when defined
    set:
      backup:
        enabled: true
        volumeSnapshotLocations:
          - default
          - gp2
    asserts:
      - equal:
          path: spec.volumeSnapshotLocations
          value:
            - default
            - gp2

  - it: includes includedNamespaceScopedResources when defined
    set:
      backup:
        enabled: true
        includedNamespaceScopedResources:
          - deployments
          - services
    asserts:
      - equal:
          path: spec.includedNamespaceScopedResources
          value:
            - deployments
            - services

  - it: includes excludedNamespaceScopedResources when defined
    set:
      backup:
        enabled: true
        excludedNamespaceScopedResources:
          - secrets
          - configmaps
    asserts:
      - equal:
          path: spec.excludedNamespaceScopedResources
          value:
            - secrets
            - configmaps

  - it: includes orderedResources when defined
    set:
      backup:
        enabled: true
        orderedResources:
          deployments:
            - my-deployment-1
            - my-deployment-2
    asserts:
      - equal:
          path: spec.orderedResources.deployments
          value:
            - my-deployment-1
            - my-deployment-2
