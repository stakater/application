suite: Deployment

templates:
  - deployment.yaml

tests:

  - it: does not fail to render when image tag and digest are not given
    set:
      deployment.image.repository: example-image
      deployment.image.tag: ""
      deployment.image.digest: ""
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: example-image

  - it: fails to render when image repository is not present
    set:
      deployment.image.repository: ""
    asserts:
      - failedTemplate:
          errorMessage: "Undefined image for application container"

  - it: uses image tag when given
    set:
      deployment.image.repository: example-image
      deployment.image.tag: example-tag
      deployment.image.digest: ""
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: example-image:example-tag
      - equal:
          path: metadata.labels["app.kubernetes.io/version"]
          value: example-tag

  - it: uses image digest when given
    set:
      deployment.image.repository: example-image
      deployment.image.tag: ""
      deployment.image.digest: sha256:example-digest
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: example-image@sha256:example-digest
      - isNull:
          path: metadata.labels["app.kubernetes.io/version"]

  - it: uses both image digest and tag when given both
    set:
      deployment.image.repository: example-image
      deployment.image.tag: example-tag
      deployment.image.digest: sha256:example-digest
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: example-image:example-tag@sha256:example-digest

  - it: yields empty service account name when disabled
    set:
      rbac.serviceAccount.enabled: false
    asserts:
      - notExists:
          path: spec.template.spec.serviceAccountName

  - it: uses service account name override when present
    set:
      rbac.serviceAccount.enabled: true
      rbac.serviceAccount.name: example-sa
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: example-sa

  - it: uses a generated service account name when not given
    set:
      applicationName: example-app
      rbac.serviceAccount.enabled: true
      rbac.serviceAccount.name: ""
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: example-app

  - it: uses grpc probing when set
    set:
      applicationName: example-app
      deployment.startupProbe.enabled: true
      deployment.startupProbe.grpc.port: 5000
      deployment.readinessProbe.enabled: true
      deployment.readinessProbe.grpc.port: 5000
      deployment.livenessProbe.enabled: true
      deployment.livenessProbe.grpc.port: 5000
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.grpc.port
          value: 5000
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.grpc.port
          value: 5000
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.grpc.port
          value: 5000

