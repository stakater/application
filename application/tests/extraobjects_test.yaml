suite: ExtraObjects

templates:
  - extraobjects.yaml

tests:
  - it: does not yield objects if extraObjects is null
    set:
      extraObjects: null
    asserts:
      - hasDocuments:
          count: 0

  - it: does not yield objects if extraObjects is []
    set:
      extraObjects: []
    asserts:
      - hasDocuments:
          count: 0

  - it: does not yield objects if extraObjects is {}
    set:
      extraObjects: {}
    asserts:
      - hasDocuments:
          count: 0

  - it: does not yield objects if extraObjects has an empty resource
    set:
      extraObjects:
        - ""
    asserts:
      - hasDocuments:
          count: 0

  - it: does not yield objects if extraObjects has an empty resource (with spaces)
    set:
      extraObjects:
        - "  "
    asserts:
      - hasDocuments:
          count: 0

  - it: does not yield objects if extraObjects has an evaluated empty resource
    set:
      ingress:
        custom:
          enabled: false
      extraObjects:
        - |
          {{- if (.Values.ingress.custom).enabled -}}
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: test-ingress
            namespace: test-namespace
          spec:
            rules:
              - host: example.com
          {{- end -}}
    asserts:
      - hasDocuments:
          count: 0

  - it: yields one ConfigMap (list, object)
    set:
      extraObjects:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
            key2: '{{ print "value2" }}'
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: test-config
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: data.key1
          value: value1
      - equal:
          path: data.key2
          value: value2

  - it: yields one ConfigMap (list, string)
    set:
      extraObjects:
        - |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
            key2: '{{ print "value2" }}'
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: test-config
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: data.key1
          value: value1
      - equal:
          path: data.key2
          value: value2

  - it: yields one ConfigMap (object, string)
    set:
      extraObjects:
        cm_a: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
            key2: '{{ print "value2" }}'
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: test-config
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: data.key1
          value: value1
      - equal:
          path: data.key2
          value: value2

  - it: yields multiple resources (list, object)
    set:
      extraObjects:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config2
            namespace: test-namespace
          data:
            key1: value1
    asserts:
      - hasDocuments:
          count: 2

  - it: yields multiple resources (list, object and string)
    set:
      extraObjects:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
        - |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config2
            namespace: test-namespace
          data:
            key1: value1
    asserts:
      - hasDocuments:
          count: 2

  - it: yields multiple resources (object, object)
    set:
      extraObjects:
        cm_a:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
        cm_b:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config2
            namespace: test-namespace
          data:
            key1: value1
    asserts:
      - hasDocuments:
          count: 2

  - it: yields multiple resources (object, object and string)
    set:
      extraObjects:
        cm_a:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config
            namespace: test-namespace
          data:
            key1: value1
        cm_b: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test-config2
            namespace: test-namespace
          data:
            key1: value1
    asserts:
      - hasDocuments:
          count: 2

  - it: yields multiple resources from range function
    set:
      configs:
        - name: config1
          data:
            key: value1
        - name: config2
          data:
            key: value2
      extraObjects:
        - |
          {{- range .Values.configs }}
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: {{ .name }}
            namespace: test-namespace
          data:
            {{- range $k, $v := .data }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
    asserts:
      - hasDocuments:
          count: 2
      - documentIndex: 0
        isKind:
          of: ConfigMap
      - documentIndex: 0
        equal:
          path: metadata.name
          value: config1
      - documentIndex: 0
        equal:
          path: data.key
          value: value1
      - documentIndex: 1
        isKind:
          of: ConfigMap
      - documentIndex: 1
        equal:
          path: metadata.name
          value: config2
      - documentIndex: 1
        equal:
          path: data.key
          value: value2
